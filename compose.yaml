services:
  app1: &app
    healthcheck:
      test: [ "CMD-SHELL", "curl localhost:3000/api/telemetry/ping" ]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: on-failure
    build: 
      context: .
      dockerfile: Dockerfile
      target: web
    hostname: fire
    ports:
      - '8080'
    depends_on:
      - database
      - migrator
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TOKEN_SECRET: ${TOKEN_SECRET}
      NODE_ENV: production

  app2:
    <<: *app
    hostname: cold

  app3:
    <<: *app
    hostname: earth

  app4:
    <<: *app
    hostname: sound

  migrator:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile
      target: migrator
    depends_on:
      - database
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}

  nginx:
    build: ./nginx
    ports:
      - '9000:80'
    depends_on:
      - app1
      - app2
      - app3
      - app4

  database:
    image: postgres:15
    hostname: katalina
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - '5432:5432'
    expose:
      - 5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/data/postgres

volumes:
  postgres_data:
